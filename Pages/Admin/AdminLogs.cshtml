@page
@using ForestChurches.Components.Logging
@model ForestChurches.Pages.Admin.AdminLogsModel
@inject LogRetriver _logRetriver
@{
    Layout = "_Admin";
}

<div style="overflow-x:auto; overflow-y:scroll; height: 750px;">
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th class="sticky-header">Timestamp</th>
                <th class="sticky-header">Level</th>
                <th class="sticky-header">Exception</th>
                <th class="sticky-header">RenderedMessage</th>
            </tr>
        </thead>
        <tbody id="logsTableBody">
            @foreach (var log in Model.Logs)
            {
                <tr style="color: @(log.Level == "Debug" ? "darkgray" : log.Level == "Warning" ? "orange" : log.Level == "Error" ? "red" : "black");">
                    <td>@log.Timestamp</td>
                    <td>@log.Level</td>
                    <td>@log.Exception</td>
                    <td>@log.Message</td>
                </tr>
            }
        </tbody>
    </table>

    <div>
        @if (Model.CurrentPage > 1)
        {
            <a asp-page="./AdminLogs" asp-route-currentPage="@(Model.CurrentPage - 1)" class="btn btn-secondary">Previous</a>
        }

        @if (Model.CurrentPage < Model.TotalPages)
        {
            <a asp-page="./AdminLogs" asp-route-currentPage="@(Model.CurrentPage + 1)" class="btn btn-secondary">Next</a>
        }
    </div>
</div>
